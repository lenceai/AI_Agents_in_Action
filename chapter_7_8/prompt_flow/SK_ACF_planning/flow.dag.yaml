id: template_standard_flow
name: Template Standard Flow
environment:
  python_requirements_txt: requirements.txt
inputs:
  problem:
    type: string
    default: Take the number of days from the start of January to the 15 of February
      and add 20, then subtract the number of days in March and add the number
      of days in the year from the end of May to the end of June to find the
      answer.
  expected:
    type: string
    default: 66 days
  deployment_name:
    type: string
    default: gpt-4-1106-preview
  feedback:
    type: string
    default: " "
outputs:
  problem:
    type: string
    reference: ${inputs.problem}
  expected:
    type: string
    reference: ${inputs.expected}
  evaluation:
    type: string
    reference: ${evaluate_answer.output}
  predicted:
    type: string
    reference: ${planner.output}
  feedback:
    type: string
    reference: ${give_feedback.output}
nodes:
- name: planner
  type: python
  source:
    type: code
    path: planner.py
  inputs:
    connection: OpenAI
    deployment_name: ${inputs.deployment_name}
    input: ${inputs.problem}
    max_tokens: 2000
    temperature: 1
    feedback: ${inputs.feedback}
- name: evaluate_answer
  type: llm
  source:
    type: code
    path: evaluate_answer.jinja2
  inputs:
    model: gpt-4-1106-preview
    expected: ${inputs.expected}
    problem: ${inputs.problem}
    predicted: ${planner.output}
  connection: OpenAI
  api: chat
- name: give_feedback
  type: llm
  source:
    type: code
    path: give_feedback.jinja2
  inputs:
    model: gpt-4-1106-preview
    problem: ${inputs.problem}
    predicted: ${planner.output}
    expected: ${inputs.expected}
    evaluation: ${evaluate_answer.output}
  connection: OpenAI
  api: chat
- name: update_jsonl
  type: python
  source:
    type: code
    path: update_jsonl.py
  inputs:
    problems: ${inputs.problem}
    evaluations: ${evaluate_answer.output}
    feedbacks: ${give_feedback.output}
    output_file: statements.jsonl
    expected: ${inputs.expected}
    predicted: ${planner.output}
    deployment_names: ${inputs.deployment_name}
  aggregation: true
